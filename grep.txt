.git/COMMIT_EDITMSG:#	renamed:    ../EXOSIMS-3.1.0-alpha/EXOSIMS/Prototypes/TargetList.py -> ../EXOSIMS-3.1.3/EXOSIMS/Prototypes/TargetList.py
Binary file .git/index matches
EXOSIMS-3.1.3/documentation/arglist.rst:      - :py:class:`~EXOSIMS.Prototypes.PlanetPopulation.PlanetPopulation`, :py:class:`~EXOSIMS.Prototypes.PlanetPhysicalModel.PlanetPhysicalModel`, :py:class:`~EXOSIMS.Prototypes.OpticalSystem.OpticalSystem`, :py:class:`~EXOSIMS.Prototypes.ZodiacalLight.ZodiacalLight`, :py:class:`~EXOSIMS.Prototypes.BackgroundSources.BackgroundSources`, :py:class:`~EXOSIMS.Prototypes.PostProcessing.PostProcessing`, :py:class:`~EXOSIMS.Prototypes.Completeness.Completeness`, :py:class:`~EXOSIMS.Prototypes.TargetList.TargetList`, :py:class:`~EXOSIMS.Prototypes.SimulatedUniverse.SimulatedUniverse`, :py:class:`~EXOSIMS.Prototypes.Observatory.Observatory`, :py:class:`~EXOSIMS.Prototypes.TimeKeeping.TimeKeeping`, :py:class:`~EXOSIMS.Prototypes.SurveySimulation.SurveySimulation`, :py:class:`~EXOSIMS.Prototypes.SurveyEnsemble.SurveyEnsemble`, :py:class:`~EXOSIMS.Prototypes.StarCatalog.StarCatalog`
EXOSIMS-3.1.3/documentation/arglist.rst:      - :py:class:`~EXOSIMS.Prototypes.TargetList.TargetList`
EXOSIMS-3.1.3/documentation/arglist.rst:      - :py:class:`~EXOSIMS.Prototypes.TargetList.TargetList`
EXOSIMS-3.1.3/documentation/arglist.rst:      - :py:class:`~EXOSIMS.Prototypes.TargetList.TargetList`
EXOSIMS-3.1.3/documentation/arglist.rst:      - :py:class:`~EXOSIMS.Prototypes.TargetList.TargetList`
EXOSIMS-3.1.3/documentation/arglist.rst:      - :py:class:`~EXOSIMS.Prototypes.TargetList.TargetList`
EXOSIMS-3.1.3/documentation/arglist.rst:      - :py:class:`~EXOSIMS.Prototypes.TargetList.TargetList`
EXOSIMS-3.1.3/documentation/arglist.rst:      - :py:class:`~EXOSIMS.Prototypes.TargetList.TargetList`
EXOSIMS-3.1.3/documentation/arglist.rst:      - :py:class:`~EXOSIMS.Prototypes.TargetList.TargetList`
EXOSIMS-3.1.3/documentation/arglist.rst:      - :py:class:`~EXOSIMS.Prototypes.TargetList.TargetList`
EXOSIMS-3.1.3/documentation/arglist.rst:      - :py:class:`~EXOSIMS.Prototypes.TargetList.TargetList`
EXOSIMS-3.1.3/documentation/arglist.rst:      - :py:class:`~EXOSIMS.Prototypes.TargetList.TargetList`
EXOSIMS-3.1.3/documentation/arglist.rst:      - :py:class:`~EXOSIMS.Prototypes.TargetList.TargetList`, :py:class:`~EXOSIMS.Prototypes.TimeKeeping.TimeKeeping`
EXOSIMS-3.1.3/documentation/arglist.rst:      - :py:class:`~EXOSIMS.Prototypes.TargetList.TargetList`
EXOSIMS-3.1.3/documentation/arglist.rst:      - :py:class:`~EXOSIMS.Prototypes.TargetList.TargetList`
EXOSIMS-3.1.3/documentation/arglist.rst:      - :py:class:`~EXOSIMS.Prototypes.TargetList.TargetList`
EXOSIMS-3.1.3/documentation/EXOSIMS.Prototypes.rst:EXOSIMS.Prototypes.TargetList module
EXOSIMS-3.1.3/documentation/EXOSIMS.Prototypes.rst:.. automodule:: EXOSIMS.Prototypes.TargetList
EXOSIMS-3.1.3/documentation/intro.rst:-  :py:class:`~EXOSIMS.Prototypes.TargetList` Provides methods for filtering input star catalogs into final target lists and stores all required star information for the final target list.
EXOSIMS-3.1.3/documentation/intro.rst:   Schematic depiction of the instantiation order of all EXOSIMS modules. The arrows indicate calls to the object constructor, and object references to each module are always passed up directly to the top calling module, so that a given module has access to any other module connected to it by a direct path of instantiations. For example, the :py:class:`~EXOSIMS.Prototypes.TargetList` module has access to both the :py:class:`~EXOSIMS.Prototypes.PostProcessing` and :py:class:`~EXOSIMS.Prototypes.BackgroundSources` modules, while the :py:class:`~EXOSIMS.Prototypes.Observatory` module does not have access to any other modules. The typical entry point to EXOSIMS is the construction of a :py:class:`~EXOSIMS.MissionSim` object, which causes the instantiation of the :py:class:`~EXOSIMS.Prototypes.SurveySimulation` module, which in turn instnatiates all the other modules. In the case of a parallelized :py:class:`~EXOSIMS.Prototypes.SurveyEnsemble` instnatiation, multiple, independent :py:class:`~EXOSIMS.Prototypes.SurveySimulation` modules are instantiated at the same time. At the end of construction, the :py:class:`~EXOSIMS.MissionSim` and :py:class:`~EXOSIMS.Prototypes.SurveySimulation` objects have direct access to all other modules as their attributes.
EXOSIMS-3.1.3/documentation/intro.rst:modules (including :py:class:`~EXOSIMS.Prototypes.TargetList`, :py:class:`~EXOSIMS.Prototypes.SimulatedUniverse`, :py:class:`~EXOSIMS.Prototypes.SurveySimulation`, and :py:class:`~EXOSIMS.Prototypes.SurveyEnsemble`) use attributes and methods from
EXOSIMS-3.1.3/documentation/quickstart.rst:    Imported TargetList (prototype module) from EXOSIMS.Prototypes.TargetList
EXOSIMS-3.1.3/documentation/starcatalog.rst:While different catalogs may contain different information, the :ref:`TargetList` will impose a minimum set of attributes (those listed in the target list's :py:attr:`~EXOSIMS.Prototypes.TargetList.TargetList.required_catalog_atts` attribute).  The contents of this list will vary depending on the particular implementation, but, for the prototype, include:
EXOSIMS-3.1.3/documentation/targetlist.rst:The target list modules take catalog data from a :ref:`StarCatalog` object and, using additional information and methods from :ref:`Completeness`, :ref:`OpticalSystem`, and :ref:`ZodiacalLight` objects, generate an input target list for a survey simulation.  The basic functionality is fully implemented by the :py:class:`~EXOSIMS.Prototypes.TargetList` prototype, with other implementations focused on special cases, such as the :py:class:`~EXOSIMS.TargetList.KnownRVPlanetsTargetList`.  The end result is an object analogous to the :ref:`StarCatalog`, with target attributes stored in equally sized :py:class:`numpy.ndarray`\s. :numref:`fig:TL_init_flowchart` shows the initialization of the  :py:class:`~EXOSIMS.Prototypes.TargetList` prototype.
EXOSIMS-3.1.3/documentation/targetlist.rst:After parsing keyword inputs and instantiating objects of :ref:`StarCatalog`, :ref:`OpticalSystem`, :ref:`PostProcessing`,  :ref:`ZodiacalLight`, and :ref:`Completeness`, the prototype :py:class:`~EXOSIMS.Prototypes.TargetList` initialization calls :py:meth:`~EXOSIMS.TargetList.TargetList.populate_target_list`, which makes :ref:`StarCatalog` attribute property arrays attributes of the ``TargetList`` object, fills in missing photometric data (if the ``fillPhotometry`` keyword input is set to True), and assigns each target system additional, computed attributes: 
EXOSIMS-3.1.3/documentation/targetlist.rst:* The true and approximate stellar mass (attributes :py:attr:`~EXOSIMS.Prototypes.TargetList.TargetList.MsEst` and :py:attr:`~EXOSIMS.Prototypes.TargetList.TargetList.MsTrue` , respectively), calculated in :py:meth:`~EXOSIMS.Prototypes.TargetList.TargetList.stellar_mass`.   The estimated mass is based on the Mass-Luminosity relationship from [Henry1993]_ and the 'true' mass is equal to the estimated mass of each star plus a randomly generated Gaussian value with mean 0 and standard deviation of 7% (the error associated with the fit in that publication). 
EXOSIMS-3.1.3/documentation/targetlist.rst:* The inclination of the target system's orbital plane (attribute :py:attr:`~EXOSIMS.Prototypes.TargetList.TargetList.I`),  calculated in  :py:meth:`~EXOSIMS.Prototypes.TargetList.TargetList.gen_inclinations`. This is used only if the ``commonSystemInclinations`` keyword input to the :ref:`SimulatedUniverse` is set to True. The inclinations are sinusoidally distributed, within the bounds set by the :ref:`PlanetPopulation` attribute ``Irange``.
EXOSIMS-3.1.3/documentation/targetlist.rst:* The :math:`\Delta\textrm{mag}` and completeness values associated with the integration cutoff time set in the :ref:`OpticalSystem` and the saturation integration time (i.e., the point at which these values stop changing).  For optical systems where there is no fundamental noise floor (i.e., where :term:`SNR` can always be increased with additional integration time) the saturation :math:`\Delta\textrm{mag}`  is effectively infinite, but the saturation completeness is limited to the maximum :term:`obscurational completeness` for that system (see [Brown2005]_ for details). These values, along with the user-selectable :math:`\Delta\textrm{mag}_\textrm{int}` and :math:`WA_\textrm{int}` are calculated in  :py:meth:`~EXOSIMS.Prototypes.TargetList.TargetList.calc_saturation_and_intCutoff_vals`, which calls helper methods :py:meth:`~EXOSIMS.Prototypes.TargetList.TargetList.calc_saturation_dMag` and :py:meth:`~EXOSIMS.Prototypes.TargetList.TargetList.calc_intCutoff_dMag`. 
EXOSIMS-3.1.3/documentation/targetlist.rst:* The single-visit :ref:`Completeness` (attribute :py:attr:`~EXOSIMS.Prototypes.TargetList.TargetList.int_comp`) based on :math:`\Delta\textrm{mag}_\textrm{int}`.
EXOSIMS-3.1.3/documentation/targetlist.rst:Finally, the whole target list is filtered by :py:meth:`~EXOSIMS.Prototypes.TargetList.TargetList.filter_target_list`, based on filters selected by input keywords.  The default filter set removes binary stars (or stars with close companions), systems where :term:`obscurational completeness` is zero (i.e., all planets are inside the :term:`IWA` or outside the :term:`OWA`), and systems for which the integration cutoff completeness is less than the ``minComp`` input value. 
EXOSIMS-3.1.3/EXOSIMS/Observatory/SotoStarshade.py:from EXOSIMS.Prototypes.TargetList import TargetList
EXOSIMS-3.1.3/EXOSIMS/Observatory/SotoStarshade_parallel.py:from EXOSIMS.Prototypes.TargetList import TargetList
EXOSIMS-3.1.3/EXOSIMS/Observatory/SotoStarshade_parallel.py:        self.dview.execute("from EXOSIMS.Prototypes.TargetList import TargetList")
Binary file EXOSIMS-3.1.3/EXOSIMS/Prototypes/__pycache__/TargetList.cpython-311.pyc matches
EXOSIMS-3.1.3/EXOSIMS/TargetList/EclipticTargetList.py:from EXOSIMS.Prototypes.TargetList import TargetList
EXOSIMS-3.1.3/EXOSIMS/TargetList/GaiaCatTargetList.py:from EXOSIMS.Prototypes.TargetList import TargetList
EXOSIMS-3.1.3/EXOSIMS/TargetList/KnownRVPlanetsTargetList.py:from EXOSIMS.Prototypes.TargetList import TargetList
EXOSIMS-3.1.3/EXOSIMS.egg-info/SOURCES.txt:EXOSIMS/Prototypes/TargetList.py
EXOSIMS-3.1.3/tests/BackgroundSources/test_BackgroundSources.py:from EXOSIMS.Prototypes.TargetList import TargetList
EXOSIMS-3.1.3/tests/Completeness/test_BrownvGarrett.py:from EXOSIMS.Prototypes.TargetList import TargetList
EXOSIMS-3.1.3/tests/Completeness/test_Completeness.py:from EXOSIMS.Prototypes.TargetList import TargetList
EXOSIMS-3.1.3/tests/OpticalSystem/test_OpticalSystem.py:from EXOSIMS.Prototypes.TargetList import TargetList
EXOSIMS-3.1.3/tests/PostProcessing/test_PostProcessing.py:from EXOSIMS.Prototypes.TargetList import TargetList
EXOSIMS-3.1.3/tests/SimulatedUniverse/test_SimulatedUniverse.py:from EXOSIMS.Prototypes.TargetList import TargetList
EXOSIMS-3.1.3/tools/gen_spectral_library_index.py:from EXOSIMS.Prototypes.TargetList import TargetList
